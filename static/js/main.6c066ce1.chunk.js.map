{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/about.jsx","components/testimonials.jsx","components/Team.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","src","height","alt","Header","data","title","paragraph","Features","map","d","i","icon","text","About","Why","Testimonials","user","name","Team","img","job","App","SmoothScroll","speed","speedAsDuration","useState","landingPageData","setLandingPageData","useEffect","JsonData","Overview","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6c066ce1.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll nav-logo' href='#page-top'>\n            <img src=\"img/logo.png\" height=\"50\" alt=\"sound sustainability logo\" />\n          </a>\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#features' className='page-scroll'>\n                How Does It Work?\n              </a>\n            </li>\n            <li>\n              <a href='#testimonials' className='page-scroll'>\n                Who Is It For?\n              </a>\n            </li>\n            <li>\n              <a href='#about' className='page-scroll'>\n                What Did We Do?\n              </a>\n            </li>\n            <li>\n              <a href='#team' className='page-scroll'>\n                Our Team\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","export const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-8 col-md-offset-2 intro-text'>\n              <h1>\n                {props.data ? props.data.title : 'Loading'}\n                \n              </h1>\n              <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n              <a\n                // need to sub out with correct link eventually\n                href='https://soundsustainabilityhearingtest.web.app/home'\n                className='btn btn-custom btn-lg page-scroll'\n              >\n                Take Your Screening\n                </a>{' '}\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const Features = (props) => {\n  return (\n    <div id='features' className='text-center'>\n      <div className='container'>\n        <div className='col-md-10 col-md-offset-1 section-title'>\n          <h2>How Does It Work?</h2>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-xs-6 col-md-3'>\n                  {' '}\n                  <i className={d.icon}></i>\n                  <h3>{d.title}</h3>\n                  <p>{d.text}</p>\n                </div>\n              ))\n            : 'Loading...'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const About = (props) => {\n  return (\n    <div id='about'>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-xs-12 col-md-6'>\n            {' '}\n            <img src='img/listening-circle.png' className='img-responsive' alt='Audiogram Speech Banana' />{' '}\n          </div>\n          <div className='col-xs-12 col-md-6'>\n            <div className='about-text'>\n              <h2>What Did We Do?</h2>\n              <p>{props.data ? props.data.paragraph : 'loading...'}</p>\n              <h3>Benefits Of Our Solution</h3>\n              <div className='list-style'>\n                <div className='col-lg col-sm col-xs-12'>\n                  <ul>\n                    {props.data\n                      ? props.data.Why.map((d, i) => (\n                        <li key={`${d}-${i}`}>{d}</li>\n                      ))\n                      : 'loading'}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='row text-center'>\n          <a\n            // need to sub out with correct link eventually\n            href='https://soundsustainabilityhearingtest.web.app/home'\n            className='btn btn-custom btn-lg page-scroll'\n          >\n            Take Your Screening\n                </a>{' '}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Testimonials = (props) => {\n  return (\n    <div id='testimonials'>\n      <div className='container'>\n        <div className='section-title text-center'>\n          <h2>Who Is It For?</h2>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-md-4'>\n                  <div className='testimonial'>\n                    <div className='testimonial-content'>\n                      <h3> {d.user} </h3>\n                      <p>{d.text}</p>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Team = (props) => {\n  return (\n    <div id='team' className='text-center'>\n      <div className='container'>\n        <div className='col-md-8 col-md-offset-2 section-title'>\n          <h2>Team Trolls</h2>\n          <p>\n            Sponsored by: <a href=\"https://www.soundsustainability.org/\">Sound Sustainability</a>\n          </p>\n        </div>\n        <div id='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-md-3 col-sm-6 team'>\n                  <div className='thumbnail'>\n                    {' '}\n                    <img src={d.img} alt='...' className='team-img' />\n                    <div className='caption'>\n                      <h4>{d.name}</h4>\n                      <p>{d.job}</p>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n        <div id='row'>\n          {' '}\n          <img src='img/iSchoolPrimary_RGB_Black.jpg' alt='' />{' '}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { Navigation } from './components/navigation'\nimport { Header } from './components/header'\nimport { Features } from './components/features'\nimport { About } from './components/about.jsx'\nimport { Testimonials } from './components/testimonials'\nimport { Team } from './components/Team'\nimport JsonData from './data/data.json'\nimport SmoothScroll from 'smooth-scroll'\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n})\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({})\n  useEffect(() => {\n    setLandingPageData(JsonData)\n  }, [])\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <Features data={landingPageData.Overview} />\n      <Testimonials data={landingPageData.Testimonials} />\n      <About data={landingPageData.About} />\n      <Team data={landingPageData.Team} />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}